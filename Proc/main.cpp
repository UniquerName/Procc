#include <stdio.h>
#include <conio.h>
#include "queue.h"
#include <cstdlib>
#include <ctime>
#include <locale.h>
#pragma warning(disable : 4996)

#define DIAP 100



bool TaskRand(int crit)
{
	int i;
	i = rand() % 100;
	//printf("t%d\n", i);
	return (i < crit);
}

bool ProcRand(int crit)
{
	int i;
	i = rand() % 100;
	//printf("p%d\n", i);
	return (i < crit);
}


int input(int max)
{
	int abc;
	do
	scanf("%d", &abc);
	while ((abc<0) || (abc >= max));
	return abc;
}

void sim()
{
	int j = 0;
	int tickskip = 0, proctime = 0, taskskip = 0;
	int tick;
	int critT, critP;
	TQueue queue;

	printf("??????? ??????????? ???????? ?????\n");
	critT = input(DIAP);
	printf("??????? ??????????? ???????? ??????????\n");
	critP = input(DIAP);

	printf("??????? ?????????? ??????\n");
	tick = input(9000);
	if (tick < 20)
	{
		for (int i = 0; i < tick; i++)
		{
			if (TaskRand(critT))
			{
				if (!queue.IsFull())
				{
					queue.Put(1);
					printf("????????? ??????\n");
				}
				else
				{
					taskskip++;
					printf("?????? ?????????\n");
				}
			}
			if (proctime != 0)
			{
				printf("????????? ???????????? ??????\n");
				if (ProcRand(critP))
				{
					proctime = 0;
					printf("?????? ??????????\n");
				}
				else
				{
					proctime++;
					printf("?????? ??????????????\n");
				}
			}
			else if (!queue.IsEmpty())
			{
				printf("????????? ?????? ??????\n");
				queue.Push();
				if (ProcRand(critP))
				{
					printf("?????? ??????????\n");
				}
				else
				{
					proctime++;
					printf("?????? ??????????????\n");
				}
			}
			else
			{
				tickskip++;
				printf("????????? ???????????\n");
			}
		}
		while (!queue.IsEmpty())
		{
			queue.Push();
			j++;
		}
	}
	else
	{
		for (int i = 0; i < tick; i++)
		{
			if (TaskRand(critT))
			{
				if (!queue.IsFull())
				{
					queue.Put(1);
				}
				else
				{
					taskskip++;
				}
			}
			if (proctime != 0)
			{
				if (ProcRand(critP))
				{
					proctime = 0;
				}
				else
				{
					proctime++;
				}
			}
			else if (!queue.IsEmpty())
			{
				queue.Push();
				if (ProcRand(critP))
				{
				}
				else
				{
					proctime++;
				}
			}
			else
			{
				tickskip++;
			}
		}
		while (!queue.IsEmpty())
		{
			queue.Push();
			j++;
		}
	}
	printf("????????? ? ???????: %d\n", j);
	printf("????? ?????????: %d\n ????? ???????: %d\n", taskskip, tickskip);
}

int main()
{
	srand(time(NULL));
	setlocale(LC_ALL, "rus");
	sim();
	return 0;
}